#include<stdio.h>
#include<stdlib.h>
struct Node{
    int data;
    struct Node* next;
} *top = NULL;
void push(int value){
    struct Node* temp = (struct Node*)malloc(sizeof(struct Node));
    if(temp==NULL)
    printf("stack overflow!!\n");
    else{
        temp->data = value;
        temp->next = top;
        top=temp;
        printf("Push %d into stack\n", value);

    }
}
int pop(){
    if(top==NULL){
    printf("stack underflow");
    return -1;
    }
    else{
        int val = top->data;
        struct Node* temp = top;
        top=top->next;
        free(temp);
        return val;

    }
}

int peek(){
    if(top==NULL){
        printf("stack is empty");
        return -1;
    }
    else{
        return top->data;
    }
}
void show(){
    if(top==NULL){
        printf("stack is empty");
    
    }
    else{
       printf("stack elements are:");
       struct Node* temp = top;
       while(temp!=NULL){
        printf("%d\n",temp->data);
        temp=temp->next;
       }
    }
}
int main(){
    while(1){
        printf("1.Push\n");
        printf("2.Pop\n");
        printf("3.Peek\n");
        printf("4.Show\n");
        printf("5.Exit\n");
        int choice;
        int val;

        printf("enter choice:");
        scanf("%d",&choice);
        switch (choice)
        {
        case 1:
        printf("enter value");
        scanf("%d",&val);
        push(val);
            break;
        case 2:
        val=pop();
        if(val!=-1)
        printf("%d pop from stack\n",val);
            break;
        case 3:
        val=peek();
        if(val!=-1)
        printf("Top element in stack is %d\n",val);
            break;
        case 4:
        show();
            break;       
        case 5:
            exit(0);
        default:
            printf("invalid choice!");
        }
        printf("\n");
        system("pause");
    }
}
